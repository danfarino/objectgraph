{"version":3,"sources":["GlobalShortcut.js","App.js","render.js","exampleCode.js","App-css.js","Editor.js","Help.js","registerServiceWorker.js","index.js"],"names":["GlobalShortcut","handleKeyDown","e","getKeyCodeString","props","keyCode","onKey","window","addEventListener","this","removeEventListener","React","Component","parts","altKey","push","ctrlKey","key","join","urlParams","URLSearchParams","location","search","initialCode","get","LZString","decompressFromEncodedURIComponent","exampleCode","replace","App","state","svg","error","code","rendering","helpVisible","stringsAsValues","renderGraph","show","produce","a","immerProduce","args","obj","toShow","setState","eval","render","String","saveToUrl","compressedCode","compressToEncodedURIComponent","history","replaceState","origin","pathname","toggleHelp","prev","handleStringDisplayChange","target","value","classes","className","root","buttons","onClick","disabled","onChange","help","editor","loading","dangerouslySetInnerHTML","__html","injectStyles","styles","viz","Viz","workerURL","config","nextId","ids","Map","escapeString","str","recurse","node","color","parentId","nodeId","set","nodeType","keys","Object","length","label","i","labelId","Array","isArray","isValueType","colorNum","index","rootNodeIds","roots","rootNodeId","dot","renderString","display","gridTemplateColumns","gridTemplateAreas","position","top","left","height","width","fontFamily","padding","zIndex","backgroundColor","borderTop","fontSize","justifyContent","alignItems","gridArea","borderRight","gridTemplateRows","minHeight","minWidth","maxWidth","marginTop","marginLeft","overflow","MonacoEnvironment","getWorkerUrl","moduleId","Editor","editorRef","createRef","handleResize","layout","prevProps","editorCode","console","log","updateOptions","monaco","create","current","language","scrollBeyondLastLine","minimap","enabled","focus","getValue","onDidChangeModelContent","setTimeout","dispose","style","ref","borderBottom","textDecoration","ul","marginBottom","paddingLeft","title","fontWeight","by","href","rel","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc004a89.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass GlobalShortcut extends React.Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (getKeyCodeString(e) === this.props.keyCode) {\r\n      this.props.onKey(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default GlobalShortcut;\r\n\r\nfunction getKeyCodeString(e) {\r\n  const parts = [];\r\n  if (e.altKey) {\r\n    parts.push(\"Alt\");\r\n  }\r\n  if (e.ctrlKey) {\r\n    parts.push(\"Ctrl\");\r\n  }\r\n\r\n  parts.push(e.key);\r\n\r\n  return parts.join(\"-\");\r\n}\r\n","import React from \"react\";\nimport render from \"./render\";\nimport immerProduce from \"immer\";\nimport exampleCode from \"./exampleCode\";\nimport LZString from \"lz-string\";\nimport injectStyles from \"react-jss\";\nimport styles from \"./App-css\";\nimport Editor from \"./Editor\";\nimport Help from \"./Help\";\nimport GlobalShortcut from \"./GlobalShortcut\";\n\nconst urlParams = new URLSearchParams(window.location.search);\nlet initialCode;\nif (urlParams.get(\"code\")) {\n  initialCode = LZString.decompressFromEncodedURIComponent(\n    urlParams.get(\"code\")\n  );\n} else {\n  initialCode = exampleCode.replace(/(^\\s+)/g, \"\");\n}\n\nclass App extends React.Component {\n  state = {\n    svg: null,\n    error: null,\n    code: initialCode,\n    rendering: false,\n    helpVisible: false,\n    stringsAsValues: false,\n  };\n\n  componentDidMount() {\n    this.renderGraph();\n  }\n\n  renderGraph = async () => {\n    if (this.state.rendering) {\n      return;\n    }\n\n    try {\n      this.setState({ rendering: true });\n\n      const { stringsAsValues } = this.state;\n\n      let toShow = [];\n\n      // The \"show\" function will be called by the evaled code below.\n      // eslint-disable-next-line no-unused-vars\n      function show(...args) {\n        for (const obj of args) {\n          toShow.push(obj);\n        }\n      }\n\n      // We need to capture this function here otherwise eval can't see it\n      // (probably has something to do with webpack)\n      // eslint-disable-next-line no-unused-vars\n      function produce(...args) {\n        return immerProduce(...args);\n      }\n\n      // eslint-disable-next-line no-eval\n      eval(this.state.code);\n\n      const svg = await render({ stringsAsValues }, ...toShow);\n      this.setState({ svg, error: null, rendering: false });\n    } catch (e) {\n      this.setState({ error: String(e), rendering: false });\n    }\n  };\n\n  saveToUrl = () => {\n    const compressedCode = LZString.compressToEncodedURIComponent(\n      this.state.code\n    );\n\n    window.history.replaceState(\n      null,\n      null,\n      window.location.origin +\n        window.location.pathname +\n        \"?code=\" +\n        compressedCode\n    );\n  };\n\n  toggleHelp = () => {\n    this.setState((prev) => ({ helpVisible: !prev.helpVisible }));\n  };\n\n  handleStringDisplayChange = (e) => {\n    this.setState(\n      { stringsAsValues: e.target.value === \"true\" },\n      this.renderGraph\n    );\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {\n      svg,\n      code,\n      error,\n      rendering,\n      helpVisible,\n      stringsAsValues,\n    } = this.state;\n\n    return (\n      <div className={classes.root}>\n        <GlobalShortcut keyCode=\"Alt-Enter\" onKey={this.renderGraph} />\n        <GlobalShortcut keyCode=\"Alt-s\" onKey={this.saveToUrl} />\n\n        <div className={classes.code}>\n          <div className={classes.buttons}>\n            <button onClick={this.renderGraph} disabled={rendering}>\n              Render (Alt-Enter)\n            </button>\n            <button onClick={this.saveToUrl}>Save to URL (Alt-s)</button>\n            <button onClick={this.toggleHelp}>\n              {helpVisible ? \"Hide Help\" : \"Show Help\"}\n            </button>\n            <select\n              value={stringsAsValues}\n              onChange={this.handleStringDisplayChange}\n              disabled={rendering}\n            >\n              <option value={false}>Strings as references</option>\n              <option value={true}>Strings as values</option>\n            </select>\n          </div>\n          <div className={classes.help}>{helpVisible && <Help />}</div>\n          <div className={classes.editor}>\n            <Editor code={code} onChange={(code) => this.setState({ code })} />\n          </div>\n          {error && <div className={classes.error}>{error}</div>}\n        </div>\n\n        {svg === null ? (\n          <div className={classes.loading}>Loading...</div>\n        ) : (\n          <div\n            className={classes.svg}\n            dangerouslySetInnerHTML={{ __html: svg }}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default injectStyles(styles)(App);\n","import Viz from \"viz.js\";\r\n\r\nconst viz = new Viz({ workerURL: \"full.render.js\" });\r\n\r\nexport default function render(config, ...roots) {\r\n  const { stringsAsValues } = config;\r\n\r\n  const parts = [\r\n    \"digraph {\",\r\n    \"splines = true\",\r\n    \"overlap = false\",\r\n    \"concentrate = true\",\r\n    \"rankdir = LR\",\r\n    'node [colorscheme = \"pastel16\" fontname = courier]',\r\n    'edge [colorscheme = \"pastel16\"]',\r\n  ];\r\n\r\n  let nextId = 1;\r\n  const ids = new Map(); // switch to WeakMap for values to not share nodes\r\n  // TODO: refactor without WeakMap\r\n\r\n  function escapeString(str) {\r\n    return str.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"');\r\n  }\r\n\r\n  const recurse = (node, color, parentId) => {\r\n    let nodeId = ids.get(node);\r\n\r\n    if (!nodeId) {\r\n      nodeId = nextId++;\r\n\r\n      try {\r\n        ids.set(node, nodeId);\r\n      } catch (e) {}\r\n\r\n      let nodeType = typeof node;\r\n      if (node === null) {\r\n        nodeType = \"null\";\r\n      }\r\n\r\n      switch (nodeType) {\r\n        case \"null\":\r\n        case \"number\":\r\n        case \"undefined\":\r\n        case \"boolean\":\r\n          parts.push(`${nodeId} [label=${node} color=\"#cccccc\" shape=rect]`);\r\n          break;\r\n\r\n        case \"string\":\r\n          parts.push(\r\n            `${nodeId} [label=\"\\\\\"${escapeString(\r\n              node\r\n            )}\\\\\"\" color=\"#cccccc\" shape=rect]`\r\n          );\r\n          break;\r\n\r\n        default:\r\n          const keys = Object.keys(node);\r\n\r\n          if (keys.length > 0) {\r\n            let label =\r\n              '<<TABLE BORDER=\"0\" CELLPADDING=\"5\" CELLBORDER=\"1\" CELLSPACING=\"0\">';\r\n\r\n            for (let i = 0; i < keys.length; i++) {\r\n              const key = keys[i];\r\n\r\n              const labelId = nextId++;\r\n              label += \"<TR>\";\r\n\r\n              if (i === 0) {\r\n                label += `<TD ROWSPAN=\"${keys.length}\" BGCOLOR=\"#eeeeee\"><B>${\r\n                  Array.isArray(node) ? \"[]\" : \"{}\"\r\n                }</B></TD>`;\r\n              }\r\n\r\n              label += `<TD BGCOLOR=\"#eeeeee\"><B>${escapeString(\r\n                key\r\n              )}</B></TD><TD PORT=\"${labelId}\">`;\r\n\r\n              const value = node[key];\r\n              let isValueType = false;\r\n\r\n              if (\r\n                value === null ||\r\n                typeof value === \"undefined\" ||\r\n                typeof value === \"number\" ||\r\n                typeof value === \"boolean\"\r\n              ) {\r\n                isValueType = true;\r\n                label += String(value);\r\n              }\r\n\r\n              if (stringsAsValues && typeof value === \"string\") {\r\n                isValueType = true;\r\n                label += `\"${escapeString(value)}\"`;\r\n              }\r\n\r\n              label += \"</TD></TR>\";\r\n\r\n              if (!isValueType) {\r\n                recurse(value, color, `${nodeId}:${labelId}`);\r\n              }\r\n            }\r\n\r\n            label += `</TABLE>> shape=plaintext`;\r\n\r\n            parts.push(`${nodeId} [label=${label} color=${color}]`);\r\n          } else {\r\n            parts.push(\r\n              `${nodeId} [label=<<B>${\r\n                Array.isArray(node) ? \"[]\" : \"{}\"\r\n              }</B>> color=${color} shape=rect fillcolor=\"#eeeeee\" style=filled]`\r\n            );\r\n          }\r\n      }\r\n    }\r\n\r\n    if (parentId) {\r\n      parts.push(`${parentId} -> ${nodeId} [color=${color} headport=w]`);\r\n    }\r\n\r\n    return nodeId;\r\n  };\r\n\r\n  let colorNum = 0;\r\n\r\n  let index = 0;\r\n  const rootNodeIds = [];\r\n  for (const root of roots) {\r\n    const rootNodeId = nextId++;\r\n    rootNodeIds.push(rootNodeId);\r\n\r\n    parts.push(\r\n      `${rootNodeId} [label=<<B>${++index}</B>> shape=cds color=white fontcolor=white fillcolor=\"#cccccc\" style=filled]`\r\n    );\r\n\r\n    const color = (colorNum++ % 6) + 1;\r\n\r\n    const nodeId = recurse(root, color);\r\n\r\n    if (typeof root === \"object\") {\r\n      parts.push(\r\n        `${rootNodeId} -> ${nodeId} [color=${color} tailport=e headport=w]`\r\n      );\r\n    } else {\r\n      parts.push(\r\n        `${rootNodeId} -> ${nodeId} [headport=w tailport=e arrowhead=none color=\"#cccccc\"]`\r\n      );\r\n    }\r\n  }\r\n\r\n  if (rootNodeIds.length > 1) {\r\n    parts.push(`{ rank=same; ${rootNodeIds.join(\"->\")} [style=invis] }`);\r\n  }\r\n\r\n  parts.push(\"}\");\r\n\r\n  const dot = parts.join(\"\\n\");\r\n\r\n  return viz.renderString(dot);\r\n}\r\n","export default `\r\nconst obj1 = {\r\n  name: 'Dan',\r\n  numbers: [11, 13, 17]\r\n};\r\n\r\nshow(obj1);\r\n\r\nconst obj2 = {\r\n  ...obj1,\r\n  foo: 123\r\n};\r\n\r\nshow(obj2);\r\n\r\nconst obj3 = obj1;\r\nobj3.name = 'John';\r\n  \r\nshow(obj3);\r\n`;\r\n","export default {\r\n  root: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"6fr 10fr\",\r\n    gridTemplateAreas: '\"code svg\"',\r\n    position: \"fixed\",\r\n    top: \"0px\",\r\n    left: \"0px\",\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n    fontFamily: \"sans-serif\"\r\n  },\r\n\r\n  error: {\r\n    padding: \"0.2em\",\r\n    color: \"red\",\r\n    zIndex: 1,\r\n    backgroundColor: \"white\",\r\n    borderTop: \"1px solid #ddd\"\r\n  },\r\n\r\n  loading: {\r\n    fontSize: \"4em\",\r\n    color: \"#ccc\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    alignItems: \"center\"\r\n  },\r\n\r\n  code: {\r\n    gridArea: \"code\",\r\n    borderRight: \"1px solid #ddd\",\r\n    display: \"grid\",\r\n    gridTemplateRows: \"auto auto 1fr auto\",\r\n    minHeight: 0,\r\n    minWidth: 0,\r\n    maxWidth: \"100%\"\r\n  },\r\n\r\n  editor: {\r\n    marginTop: \"0.5em\",\r\n    minHeight: 0,\r\n    minWidth: 0\r\n  },\r\n\r\n  buttons: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fit, minmax(8em, auto))\"\r\n  },\r\n\r\n  svg: {\r\n    gridArea: \"svg\",\r\n    marginLeft: \"2em\",\r\n    overflow: \"scroll\"\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport * as monaco from \"monaco-editor\";\r\n\r\nwindow.MonacoEnvironment = {\r\n  getWorkerUrl: function (moduleId, label) {\r\n    if (label === \"typescript\" || label === \"javascript\") {\r\n      return \"ts.worker.bundle.js\";\r\n    }\r\n    return \"editor.worker.bundle.js\";\r\n  },\r\n};\r\n\r\nclass Editor extends React.Component {\r\n  editorRef = React.createRef();\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.code !== this.editorCode) {\r\n      console.log(\"update\");\r\n      this.editor.updateOptions({\r\n        value: this.props.code,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.editor = monaco.editor.create(this.editorRef.current, {\r\n      language: \"javascript\",\r\n      value: this.props.code,\r\n      scrollBeyondLastLine: false,\r\n      fontSize: 18,\r\n      minimap: {\r\n        enabled: false,\r\n      },\r\n    });\r\n\r\n    this.editor.focus();\r\n\r\n    this.editorCode = this.editor.getValue();\r\n\r\n    this.editor.onDidChangeModelContent(() => {\r\n      this.editorCode = this.editor.getValue();\r\n      this.props.onChange(this.editorCode);\r\n    });\r\n\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n    window.setTimeout(() => this.handleResize(), 0);\r\n  }\r\n\r\n  handleResize = () => {\r\n    this.editor.layout();\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n\r\n    this.editor.dispose();\r\n  }\r\n\r\n  render() {\r\n    return <div style={{ height: \"100%\" }} ref={this.editorRef} />;\r\n  }\r\n}\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\nimport injectStyles from \"react-jss\";\r\n\r\nconst styles = {\r\n  root: {\r\n    backgroundColor: \"#f1f1f1\",\r\n    borderBottom: \"1px solid #ccc\",\r\n    padding: \"1.2em\",\r\n\r\n    \"& a:link\": {\r\n      textDecoration: \"none\",\r\n      color: \"rgb(0, 0, 238)\",\r\n    },\r\n\r\n    \"& a:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n\r\n    \"& a:visited\": {\r\n      color: \"rgb(0, 0, 238)\",\r\n    },\r\n  },\r\n\r\n  ul: {\r\n    marginTop: \"1.2em\",\r\n    marginBottom: \"0.7em\",\r\n    paddingLeft: \"1em\",\r\n\r\n    \"& li:not(:last-child)\": {\r\n      marginBottom: \"0.7em\",\r\n    },\r\n  },\r\n\r\n  title: {\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1.1em\",\r\n  },\r\n\r\n  by: {\r\n    fontSize: \"0.8em\",\r\n    marginTop: \"0.3em\",\r\n    marginLeft: \"0.1em\",\r\n  },\r\n};\r\n\r\nfunction Help(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.title}>JavaScript Object Reference Graph</div>\r\n      <div className={classes.by}>by Dan Farino, 2018-2021</div>\r\n      <ul className={classes.ul}>\r\n        <li>\r\n          Call the &ldquo;show&rdquo; function with any objects/values that\r\n          you&rsquo;d like to graph.\r\n        </li>\r\n        <li>\r\n          If you&rsquo;d like to use{\" \"}\r\n          <a\r\n            href=\"https://immerjs.github.io/immer/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            immer 9.0\r\n          </a>\r\n          , it&rsquo;s in scope as &ldquo;produce&rdquo; (\r\n          <a href=\"?code=MYewdgzgLgBCBGArAjDAvDA3gKBjMAhgLYCmAXDAOQAiBYlANLvgK5HwkBOEFA2ssgYxkAZiHIA7AF1sAXwDc2bBAAWIAO4AKBCgCUi7KEiwdAJnQwADpxAATFsBLakgmLfQA+LM1sA6QqQWlABSICr0irL6Sqoazoim0Ybg0HBIIhbWdg5OZkLuaF44eH5gbBzcvAAMUhYALKaKJf7lXBC+liyqmshVVdFRBrFaOiLRQA\">\r\n            example\r\n          </a>\r\n          ).\r\n        </li>\r\n        <li>\r\n          <a\r\n            href=\"https://github.com/danfarino/objectgraph\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Source code on GitHub\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <span>\r\n            Since strings are immutable, you can render them as values in order\r\n            to de-clutter the output. However, rendering them as references is\r\n            more accurate in showing that references are being shared and no\r\n            copies of the strings are being made.\r\n          </span>\r\n          <br />\r\n          <em>\r\n            Note: when rendering strings as references, it is assumed that all\r\n            identical strings are shared in memory. This may not be true in all\r\n            cases (e.g. when you are programmatically generating strings).\r\n          </em>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default injectStyles(styles)(Help);\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { unregister } from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nunregister();\n"],"sourceRoot":""}